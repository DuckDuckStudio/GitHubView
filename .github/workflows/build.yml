name: 打包与构建发行版文件

on:
  workflow_dispatch:
    inputs:
      version:
        description: 版本号
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2022]

    steps:
    - name: 检出代码
      uses: actions/checkout@v5.0.0

    - name: 设置 .NET 9.x
      uses: actions/setup-dotnet@v5.0.0
      with:
        dotnet-version: 9.x

    - name: 设置 Python 3.x
      uses: actions/setup-python@v6
      with:
        python-version: 3.x

    - name: 更新版本号
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python "自动化脚本/修改版本号.py" "${{ github.event.inputs.version }}"

    - name: 发布
      run: |
        dotnet publish ghv/ghv.csproj --configuration Release --output ./output
        dotnet publish ghv/ghv.csproj --configuration Release --output ./output_SingleFile /p:PublishSingleFile=true /p:PublishTrimmed=true

    - name: 创建发行文件 - Windows
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        # 创建Release目录
        mkdir -p Release

        # 使用7z压缩为zip格式
        7z a -tzip Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}.zip output/*

        # 创建安装包
        curl -o "C:\Program Files (x86)\Inno Setup 6\Languages\ChineseSimplified.isl" "https://raw.githubusercontent.com/jrsoftware/issrc/main/Files/Languages/Unofficial/ChineseSimplified.isl"
        iscc installer/Windows.iss
        iscc installer/SingleFile/Windows.iss
        move installer/GitHubView-installer.exe Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}-Setup.exe
        move installer/SingleFile/GitHubView-installer.exe Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}-Setup-SingleFile.exe

        # 单独处理单文件
        move output_SingleFile/ghv.exe Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}-SingleFile.exe

    - name: 创建发行文件 - Linux
      shell: bash
      if: ${{ runner.os == 'Linux' }}
      run: |
        # 创建Release目录
        mkdir -pv Release

        echo "构建tar包..."

        # 使用tar压缩
        tar -czvf Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}.tar.gz -C output .

        # =======================================================
        echo "构建DEB包..."
        mkdir -pv output_SingleFile/usr/local/bin/
        cp -pv output_SingleFile/ghv output_SingleFile/usr/local/bin/

        # 复制 DEBIAN 控制文件
        cp -rpv installer/SingleFile/DEBIAN output_SingleFile

        # 生成安装包
        dpkg --build output_SingleFile ghv.deb
        mv -v ghv.deb Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}.deb

        # 验证安装包
        dpkg --info Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}.deb
        dpkg --contents Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}.deb

        # =======================================================
        echo "发布单文件..."
        # 单独处理单文件
        mv -v output_SingleFile/ghv Release/GitHubView-${{ github.event.inputs.version }}-${{ matrix.os }}-SingleFile

    - name: 上传发行文件
      uses: actions/upload-artifact@v4
      with:
        name: ghv-${{ github.event.inputs.version }}-${{ matrix.os }}
        path: ./Release
